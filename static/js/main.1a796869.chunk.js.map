{"version":3,"sources":["components/AddNumber.jsx","containers/AddNumberWrap.jsx","components/AddNumberRoot.jsx","components/DisplayNumber.jsx","containers/DisplayNumberWrap.jsx","components/DisplayNumberRoot.jsx","App.js","reportWebVitals.js","store.js","index.js"],"names":["AddNumber","state","size","type","value","onClick","this","props","bind","onChange","e","setState","Number","target","React","Component","connect","dispatch","AddNumberRoot","AddNumberWrap","DisplayNumber","number","readOnly","unit","DisplayNumberRoot","DisplayNumberWrap","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","action","undefined","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"uOAuBeA,E,4MApBbC,MAAQ,CAAEC,KAAM,G,4CAEhB,WACE,OACE,gCACE,4CAEA,uBAAOC,KAAK,SAASC,MAAM,IAAIC,QAAS,WAEtCC,KAAKC,MAAMF,QAAQC,KAAKL,MAAMC,OAC9BM,KAAKF,QAEP,uBAAOH,KAAK,OAAOC,MAAOE,KAAKL,MAAMC,KAAMO,SAAU,SAAUC,GAC7DJ,KAAKK,SAAS,CAAET,KAAMU,OAAOF,EAAEG,OAAOT,UACtCI,KAAKF,e,GAfSQ,IAAMC,W,OCafC,kBAAQ,MATvB,SAAsCC,GACpC,MAAO,CACLZ,QAAS,SAAUH,GAEjBe,EAAS,CAAEd,KAAM,YAAaD,KAAMA,QAK3Bc,CAA4ChB,GCD5CkB,E,4JAVb,WACE,OACE,gCACE,iDACA,cAACC,EAAD,W,GALoBL,IAAMC,WCUnBK,E,4JAVb,WACE,OACE,gCACE,gDACA,uBAAOjB,KAAK,OAAOC,MAAOE,KAAKC,MAAMc,OAAQC,UAAQ,IAFvD,IAEkEhB,KAAKC,MAAMgB,Y,GALvDT,IAAMC,WCWnBC,mBAPf,SAAmCf,GAC/B,MAAO,CACHoB,OAAQpB,EAAMoB,UAKPL,CAAmCI,GCCnCI,E,4JAVb,WACE,OACE,gCACE,qDACA,cAACC,EAAD,CAAmBF,KAAK,c,GALAT,IAAMC,WCgBvBW,E,4MAbbzB,MAAQ,CAAEoB,OAAQ,G,4CAElB,WACE,OACE,sBAAKM,UAAU,MAAf,UACE,sCACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GARUb,IAAMC,WCOTa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCLCQ,eAAY,SAASpC,EAAOqC,GACvC,YAAcC,IAAVtC,EAEO,CAACoB,OAAQ,GAEO,cAAhBiB,EAAOnC,KACP,2BAAIF,GAAX,IAAkBoB,OAAQpB,EAAMoB,OAASiB,EAAOpC,OAG7CD,IACRuC,OAAOC,8BAAgCD,OAAOC,gCCJjDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.1a796869.chunk.js","sourcesContent":["import React from 'react';\n\nclass AddNumber extends React.Component {\n  state = { size: 1 }\n\n  render() {\n    return (\n      <div>\n        <h1>Add Number</h1>\n\n        <input type=\"button\" value=\"+\" onClick={function () {\n          // Contatiner 컴포넌트에 정의된 onClick을 호출\n          this.props.onClick(this.state.size);\n        }.bind(this)}></input>\n\n        <input type=\"text\" value={this.state.size} onChange={function (e) {\n          this.setState({ size: Number(e.target.value) });\n        }.bind(this)}></input>\n      </div>\n    )\n  }\n}\n\nexport default AddNumber;","import AddNumber from \"../components/AddNumber\";\nimport { connect } from \"react-redux\";\n\n// connect의 두번째 인자로 오는 함수\n// redux의 dispatch와 react의 props를 연결해준다.\n// 원래 이름은 mapDispatchToProps 이지만, react랑 용어가 겹치기 때문에 이름을 바꿔주었다. (이름은 아무거나 괜찮다)\nfunction mapReduxDispatchToReactProps(dispatch) {\n  return {\n    onClick: function (size) {\n      // onclick시 해당 action을 reducer로 전달한다.\n      dispatch({ type: 'INCREMENT', size: size });\n    }\n  }\n}\n\nexport default connect(null, mapReduxDispatchToReactProps)(AddNumber);\n\n// ----------------------------------------------------------------------\n// Before react-redux code\n\n// import React from 'react';\n// import store from '../store';\n\n// class AddNumberWrap extends React.Component {\n//     render() {\n//         return <AddNumber onClick={function(size) {\n//           // onclick시 해당 action을 dispatch로 전달한다.\n//           store.dispatch({ type: 'INCREMENT', size: size });\n//         }}></AddNumber>\n//     }\n// }\n\n// export default AddNumberWrap;","import React from 'react';\nimport AddNumberWrap from '../containers/AddNumberWrap';\n\nclass AddNumberRoot extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Add Number Root</h1>\n        <AddNumberWrap />\n      </div>\n    )\n  }\n}\n\nexport default AddNumberRoot;","import React from 'react';\n\nclass DisplayNumber extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Display Number</h1>\n        <input type=\"text\" value={this.props.number} readOnly></input> {this.props.unit}\n      </div>\n    )\n  }\n}\n\nexport default DisplayNumber;","import DisplayNumber from \"../components/DisplayNumber\";\nimport { connect } from \"react-redux\";\n\n// connect의 첫번째 인자로 오는 함수\n// redux의 state와 react의 props를 연결해주고, 변경사항이 있으면 컴포넌트를 다시 그려준다.\n// 원래 이름은 mapStateToProps 이지만, react랑 용어가 겹치기 때문에 이름을 바꿔주었다. (이름은 아무거나 괜찮다)\nfunction mapReduxStateToReactProps(state) {\n    return {\n        number: state.number\n    }\n}\n\n// connect()가 반환해준 함수(그래서 괄호가 두개)는 인자로 받은 컴포넌트를 wrapping해준 컴포넌트를 리턴해준다.\nexport default connect(mapReduxStateToReactProps)(DisplayNumber);\n\n// ----------------------------------------------------------------------\n// Before react-redux code\n\n// import React from 'react';\n// import store from \"../store\";\n\n// class DisplayNumberWrap extends React.Component {\n//     state = { number: store.getState().number };\n\n//     componentDidMount() {\n//         // redux state에 변화를 감지하면, 안의 함수를 실행\n//         store.subscribe(function () {\n//             // redux state에서 값을 가져와, 이 컴포넌트 state에 값을 세팅\n//             this.setState({ number: store.getState().number });\n//         }.bind(this));\n//     }\n\n//     render() {\n//         return <DisplayNumber number={this.state.number} unit={this.props.unit}></DisplayNumber>\n//     }\n// }\n\n// export default DisplayNumberWrap;\n","import React from 'react';\nimport DisplayNumberWrap from '../containers/DisplayNumberWrap';\n\nclass DisplayNumberRoot extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Display Number Root</h1>\n        <DisplayNumberWrap unit=\"kg\" />\n      </div>\n    )\n  }\n}\n\nexport default DisplayNumberRoot;","import './App.css';\nimport React from 'react';\nimport AddNumberRoot from './components/AddNumberRoot'\nimport DisplayNumberRoot from './components/DisplayNumberRoot';\n\nclass App extends React.Component {\n  state = { number: 0 }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Root</h1>\n        <AddNumberRoot />\n        <DisplayNumberRoot />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from \"redux\";\n\nexport default createStore(function(state, action) {\n    if (state === undefined) {\n        // 초기 state 설정\n        return {number: 0}\n\n    } else if (action.type === 'INCREMENT') {\n        return {...state, number: state.number + action.size}\n\n    }\n    return state;\n}, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}